{"version":3,"sources":["components/Button/Button.jsx","helpers/constants.js","helpers/api.js","helpers/pokemonTypes.js","components/Loader/Loader.jsx","helpers/modalStyles.js","components/Stats/Stats.jsx","components/StatsList/StatsList.jsx","components/Card/Card.jsx","components/PokemonList/PokemonList.jsx","components/Input/Input.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["Button","action","className","children","onClick","defaultProps","URL10","URL_ALL","request","url","options","fetch","then","response","ok","Error","json","pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","unknown","shadow","Loader","modalStyles","content","top","left","right","bottom","marginRight","transform","Stats","pokemon","closeModal","src","id","onError","event","target","alt","name","stats","map","stat","base_stat","StatsList","modalIsOpen","console","log","isOpen","onRequestClose","style","contentLabel","closeTimeoutMS","Modal","setAppElement","Card","selectPokemon","openModal","height","weight","types","type","backgroundColor","slot","moves","length","PokemonList","filteredData","handlePokemonSelection","Input","setFilteredData","pokemonData","useState","filter","setFilter","useEffect","query","toLowerCase","startsWith","placeholder","value","onChange","currentTarget","Header","href","rel","App","currentUrl","setCurrentUrl","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","setIsOpen","setPokemon","setTypes","filterArray","setFilterArray","numberToLoad","setNumberToLoad","loadPokemon","data","a","Promise","all","res","loadPokemons","results","previous","next","dowloadData","document","getElementById","classList","toggle","includes","index","indexOf","splice","push","some","el","filterByType","e","handleSelectChange","disabled","pokemonId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.28466857.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../App.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ action, className, children }) => (\r\n  <button className={className} onClick={action}>\r\n    {children}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func,\r\n  className: PropTypes.string,\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nButton.defaultProps = {\r\n  action: () => {},\r\n  className: 'button'\r\n}\r\n","export const URL10 = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\nexport const typeUrl = 'https://pokeapi.co/api/v2/type/'\r\n","import { typeUrl, URL_ALL } from './constants'\r\n\r\nexport const request = (url, options = {}) => fetch(url, options)\r\n  .then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Pokemons weren\\'t loaded')\r\n    }\r\n\r\n    return response.json()\r\n  })\r\n\r\nexport const getAllPokemons = () => request(URL_ALL).then(data => data)\r\nexport const getTypes = () => request(typeUrl).then(data => data.results)\r\n","const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD',\r\n  unknown: '#F3FF89',\r\n  shadow: '#9467B5'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import React from 'react'\n\nexport function Loader () {\n  return (\n    <div className=\"loader__container\">\n      <div className=\"loader\"></div>\n    </div>\n  )\n}\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => {\n  const addDefaultSrc = (event) => {\n    event.target.src = '../images/Poke_ball.png'\n  }\n\n  return (\n    <div className=\"stats__container\" onClick={closeModal}>\n      <div className=\"stats__image-container\">\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\n          onError={addDefaultSrc}\n          alt={pokemon.name}\n          className=\"stats__image\"\n        />\n      </div>\n      <div className=\"stats__name\">{`${pokemon.name}`}</div>\n      <div className=\"stats__stats\">\n        {pokemon.stats.map((stat) => (\n          <div className=\"stats__stat-container\" key={stat.stat.name}>\n            <div className=\"stats__stat-name\">{stat.stat.name}</div>\n            <div className=\"stats__base-stat\"></div>\n            <div className=\"stats__base-stat-value\">{stat.base_stat}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(\n      PropTypes.shape({\n        base_stat: PropTypes.number.isRequired,\n        stat: PropTypes.shape({\n          name: PropTypes.string.isRequired\n        })\n      })\n    ).isRequired\n  }),\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {}\n}\n","import React from 'react'\nimport Modal from 'react-modal'\nimport { modalStyles } from '../../helpers/modalStyles'\nimport { Stats } from '../Stats/Stats'\nimport PropTypes from 'prop-types'\n\nModal.setAppElement('#root')\n\nexport function StatsList ({ pokemon, modalIsOpen, closeModal }) {\n  console.log(pokemon)\n  return (\n    <>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={modalStyles}\n        contentLabel=\"Example Modal\"\n        closeTimeoutMS={300}\n      >\n        <div>\n          {pokemon.map((pokemon) => (\n            <Stats pokemon={pokemon} key={pokemon.id} closeModal={closeModal} />\n          ))}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nStatsList.propTypes = {\n  pokemon: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      weight: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      types: PropTypes.arrayOf(\n        PropTypes.shape({\n          slot: PropTypes.number\n        })\n      ).isRequired,\n      moves: PropTypes.arrayOf(PropTypes.object).isRequired\n    })\n  ),\n  modalIsOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired\n}\n\nStatsList.defaultProps = {\n  pokemon: null\n}\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => {\r\n  const addDefaultSrc = (event) => {\r\n    event.target.src = '../images/Poke_ball.png'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__card\"\r\n        onClick={() => {\r\n          selectPokemon(pokemon.id)\r\n          openModal()\r\n        }}\r\n      >\r\n        <div className=\"card__container-wrapper\">\r\n          <div className=\"card__height-container\">\r\n            <span className=\"card__height\">\r\n              <div>Height:</div>\r\n              <div>{`${pokemon.height / 10} m`}</div>\r\n            </span>\r\n          </div>\r\n          <div className=\"card__weight-container\">\r\n            <span className=\"card__weight\">\r\n              <div>Weight:</div>\r\n              <div>{`${pokemon.weight / 100} kg`}</div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__name\">{`${pokemon.name}`}</div>\r\n        <div className=\"card__image-container\">\r\n          <img\r\n            className=\"card__image\"\r\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n            onError={addDefaultSrc}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"card__types\">\r\n          {pokemon.types.map((type) => (\r\n            <div\r\n              className=\"card__type\"\r\n              key={type.slot}\r\n              style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"card__moves\">\r\n          {`Total moves: ${pokemon.moves.length}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        slot: PropTypes.number\r\n      })\r\n    ).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport { Card } from '../Card/Card'\n\nexport function PokemonList ({\n  filteredData,\n  openModal,\n  handlePokemonSelection\n}) {\n  return filteredData.map((pokemon) => (\n    <Card\n      key={pokemon.id}\n      pokemon={pokemon}\n      openModal={openModal}\n      selectPokemon={handlePokemonSelection}\n    />\n  ))\n}\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport function Input ({ setFilteredData, pokemonData }) {\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    if (!filter) {\n      setFilteredData(pokemonData)\n      return\n    }\n    const query = filter.toLowerCase()\n    const filteredData = filter\n      ? pokemonData.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(query)\n      )\n      : pokemonData\n    setFilteredData(filteredData)\n  }, [filter, pokemonData])\n\n  return (\n    <input\n      type=\"text\"\n      id=\"search-query\"\n      className=\"input is-success\"\n      placeholder=\"Start filter the pokemons!\"\n      value={filter}\n      onChange={({ currentTarget: { value } }) => setFilter(value)}\n    />\n  )\n}\n\nInput.propTypes = {\n  pokemonData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      weight: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      types: PropTypes.arrayOf(\n        PropTypes.shape({\n          slot: PropTypes.number\n        })\n      ).isRequired,\n      moves: PropTypes.arrayOf(PropTypes.object).isRequired\n    })\n  ),\n  setFilteredData: PropTypes.func.isRequired\n}\n\nInput.defaultProps = {\n  pokemon: null\n}\n","import React from 'react'\nimport './Header.scss'\n\nexport function Header () {\n  return (\n    <div className=\"header\">\n      <img\n        src=\"../../images/pokemon-logo.png\"\n        alt=\"Pokemon Logo\"\n        className=\"header__image\"\n      />\n      <a\n        href=\"https://pokeapi.co/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"header__link\"\n      >\n        PokeAPI\n      </a>\n    </div>\n  )\n}\n","import 'bulma'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './App.scss'\r\nimport { Button } from './components/Button/Button'\r\nimport { getTypes } from './helpers/api'\r\nimport pokemonTypes from './helpers/pokemonTypes'\r\nimport { Loader } from './components/Loader'\r\nimport { StatsList } from './components/StatsList/StatsList'\r\nimport { PokemonList } from './components/PokemonList/PokemonList'\r\nimport { Input } from './components/Input/Input'\r\nimport { Header } from './components/Header/Header'\r\nimport { URL10, URL20, URL50, URL_ALL } from './helpers/constants'\r\n\r\nfunction App () {\r\n  const [currentUrl, setCurrentUrl] = useState(URL10)\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextPage, setNextPage] = useState('')\r\n  const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [types, setTypes] = useState([])\r\n  const [filterArray, setFilterArray] = useState([])\r\n  const [filteredData, setFilteredData] = useState(pokemonData)\r\n  const [numberToLoad, setNumberToLoad] = useState('')\r\n\r\n  const loadPokemon = async (data) => {\r\n    const pokemon = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        return await fetch(pokemon.url)\r\n          .then((res) => res.json())\r\n          .then((data) => data)\r\n      })\r\n    )\r\n\r\n    setPokemonData(pokemon)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const dowloadData = async (url) => {\r\n      setLoading(true)\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      loadPokemon(data.results)\r\n      setPrevPage(data.previous)\r\n      setNextPage(data.next)\r\n      getTypes().then((types) => setTypes(types))\r\n      setLoading(false)\r\n    }\r\n    dowloadData(currentUrl)\r\n    setFilterArray([])\r\n  }, [currentUrl])\r\n\r\n  function openModal () {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  function closeModal () {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter((pokemon) => pokemon.id === pokemonId))\r\n  }\r\n\r\n  function filterByType (name) {\r\n    const filterButton = document.getElementById(name)\r\n    filterButton.classList.toggle('pressed')\r\n    if (filterArray.includes(name)) {\r\n      const index = filterArray.indexOf(name)\r\n      if (index > -1) {\r\n        filterArray.splice(index, 1)\r\n      }\r\n    } else {\r\n      filterArray.push(name)\r\n    }\r\n\r\n    setFilterArray(filterArray)\r\n\r\n    if (!filterArray.length) {\r\n      setFilteredData(pokemonData)\r\n      return\r\n    }\r\n\r\n    const filteredData = pokemonData.filter((pokemon) =>\r\n      pokemon.types.some((el) =>\r\n        filterArray.includes(el.type.name.toLowerCase())\r\n      )\r\n    )\r\n    setFilteredData(filteredData)\r\n  }\r\n\r\n  function loadPokemons (url) {\r\n    setCurrentUrl(url)\r\n  }\r\n\r\n  function handleSelectChange (e) {\r\n    switch (e.target.value) {\r\n      case '10':\r\n        loadPokemons(URL10)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      case '20':\r\n        loadPokemons(URL20)\r\n        setNumberToLoad('20')\r\n        break\r\n      case '50':\r\n        loadPokemons(URL50)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      case 'all':\r\n        loadPokemons(URL_ALL)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      default:\r\n        loadPokemons(URL10)\r\n        setNumberToLoad(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {loading\r\n        ? (\r\n        <Loader />\r\n          )\r\n        : (\r\n        <div className=\"main\">\r\n          <div className=\"main__types-buttons\">\r\n            {types.map((type) => (\r\n              <button\r\n                key={type.name}\r\n                id={type.name}\r\n                onClick={() => filterByType(type.name)}\r\n                className=\"main__type-button\"\r\n                style={{ backgroundColor: pokemonTypes[type.name] }}\r\n              >\r\n                {type.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"main__query-wrapper\">\r\n            <div className=\"select is-success\">\r\n              <select\r\n                value={numberToLoad}\r\n                onChange={(e) => handleSelectChange(e)}\r\n                className=\"is-hovered\"\r\n              >\r\n                <option disabled={true} value=\"\">\r\n                  Choose the number to load\r\n                </option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"50\">50</option>\r\n                <option value=\"all\">all</option>\r\n              </select>\r\n            </div>\r\n            <Input\r\n              setFilteredData={setFilteredData}\r\n              pokemonData={pokemonData}\r\n            />\r\n          </div>\r\n          <div className=\"main__container\">\r\n            {filteredData.length\r\n              ? (\r\n              <PokemonList\r\n                filteredData={filteredData}\r\n                openModal={openModal}\r\n                handlePokemonSelection={handlePokemonSelection}\r\n              />\r\n                )\r\n              : (\r\n              <div>No pokemons here. Try to load more and filter again</div>\r\n                )}\r\n          </div>\r\n          <div className=\"main__button-container\">\r\n            {prevPage && (\r\n              <Button\r\n                action={() => loadPokemons(prevPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                &lt; Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button\r\n                action={() => loadPokemons(nextPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                Next &gt;\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <StatsList\r\n            pokemon={pokemon}\r\n            modalIsOpen={modalIsOpen}\r\n            closeModal={closeModal}\r\n          />\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}