{"version":3,"sources":["components/Button/Button.jsx","helpers/pokemonTypes.js","components/Card/Card.jsx","components/Stats/Stats.jsx","helpers/api.js","helpers/modalStyles.js","App.js","helpers/constants.js","index.js"],"names":["Button","action","className","children","onClick","defaultProps","pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","unknown","shadow","Card","pokemon","selectPokemon","openModal","id","height","weight","name","src","onError","event","target","alt","types","map","type","style","backgroundColor","slot","moves","length","Stats","closeModal","stats","stat","base_stat","request","url","options","fetch","then","response","ok","Error","json","modalStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","App","useState","currentUrl","setCurrentUrl","pokemonData","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","modalIsOpen","setIsOpen","query","setQuery","setPokemon","setTypes","loadPokemon","data","a","Promise","all","res","useEffect","results","previous","next","console","log","dowloadData","handlePokemonSelection","pokemonId","filter","filteredPokemonList","some","filterByType","placeholder","value","onChange","inputText","toLowerCase","startsWith","includes","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acce7c58.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../App.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ action, className, children }) => (\r\n  <button\r\n    className={className}\r\n    onClick={action}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func,\r\n  className: PropTypes.string,\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nButton.defaultProps = {\r\n  action: () => {},\r\n  className: 'button'\r\n}\r\n","const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD',\r\n  unknown: '#F3FF89',\r\n  shadow: '#9467B5'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => {\r\n  const addDefaultSrc = (event) => {\r\n    event.target.src = '../images/Poke_ball.png'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__card\"\r\n        onClick={() => {\r\n          selectPokemon(pokemon.id)\r\n          openModal()\r\n        }}\r\n      >\r\n        <div className=\"card__container-wrapper\">\r\n          <div className=\"card__height-container\">\r\n            <span className=\"card__height\">\r\n              <div>Height:</div>\r\n              <div>{`${pokemon.height / 10} m`}</div>\r\n            </span>\r\n          </div>\r\n          <div className=\"card__weight-container\">\r\n            <span className=\"card__weight\">\r\n              <div>Weight:</div>\r\n              <div>{`${pokemon.weight / 100} kg`}</div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__name\">{`${pokemon.name}`}</div>\r\n        <div className=\"card__image-container\">\r\n          <img\r\n            className=\"card__image\"\r\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n            onError={addDefaultSrc}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"card__types\">\r\n          {pokemon.types.map((type) => (\r\n            <div\r\n              className=\"card__type\"\r\n              key={type.slot}\r\n              style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"card__moves\">\r\n          {`Total moves: ${pokemon.moves.length}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        slot: PropTypes.number\r\n      })\r\n    ).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => {\n  return (\n    <div className='stats__container' onClick={closeModal}>\n      <div className='stats__image-container'>\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\n          alt={pokemon.name} className=\"stats__image\"\n        />\n      </div>\n      <div className='stats__name'>\n        {`${pokemon.name}`}\n      </div>\n      <div className='stats__stats'>\n        {pokemon.stats.map(stat => (\n          <div className='stats__stat-container' key={stat.stat.name}>\n            <div className='stats__stat-name'>\n              {stat.stat.name}\n            </div>\n            <div className='stats__base-stat'>\n            </div>\n              <div className='stats__base-stat-value'>\n                {stat.base_stat}\n              </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      base_stat: PropTypes.number.isRequired,\n      stat: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    })).isRequired\n  }),\n  selectPokemon: PropTypes.func,\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {},\n  selectPokemon: () => {}\n}\n","const typeUrl = 'https://pokeapi.co/api/v2/type/'\r\nconst URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n\r\nexport const request = (url, options = {}) => fetch(url, options)\r\n  .then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Pokemons weren\\'t loaded')\r\n    }\r\n\r\n    return response.json()\r\n  })\r\n\r\nexport const getAllPokemons = () => request(URL_ALL).then(data => data)\r\nexport const getTypes = () => request(typeUrl).then(data => data.results)\r\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n","import 'bulma'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport './App.scss'\r\nimport { Button } from './components/Button/Button'\r\nimport { Card } from './components/Card'\r\nimport { Stats } from './components/Stats/Stats'\r\nimport { getTypes } from './helpers/api'\r\nimport { modalStyles } from './helpers/modalStyles'\r\nimport pokemonTypes from './helpers/pokemonTypes'\r\nimport { URL_ALL } from './helpers/constants'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction App () {\r\n  const [currentUrl, setCurrentUrl] = useState('https://pokeapi.co/api/v2/pokemon/?limit=50')\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextPage, setNextPage] = useState('')\r\n  const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [types, setTypes] = useState([])\r\n\r\n  const loadPokemon = async (data) => {\r\n    const pokemon = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        return await fetch(pokemon.url)\r\n          .then((res) => res.json())\r\n          .then((data) => data)\r\n      })\r\n    )\r\n\r\n    setPokemonData(pokemon)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const dowloadData = async (url) => {\r\n      setLoading(true)\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      loadPokemon(data.results)\r\n      setPrevPage(data.previous)\r\n      setNextPage(data.next)\r\n      getTypes().then((types) => setTypes(types))\r\n      setLoading(false)\r\n      console.log(pokemonData)\r\n    }\r\n    dowloadData(currentUrl)\r\n  }, [currentUrl])\r\n\r\n  function openModal () {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  function closeModal () {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter((pokemon) => pokemon.id === pokemonId))\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { value } = event.target\r\n    const inputText = value.toLowerCase()\r\n    setQuery(inputText)\r\n    setPokemonData(\r\n      pokemonData.filter(\r\n        (pokemon) =>\r\n          pokemon.name.toLowerCase().startsWith(inputText) ||\r\n          pokemon.name.toLowerCase().includes(inputText)\r\n      )\r\n    )\r\n  }\r\n\r\n  function filterByType (name) {\r\n    const filteredPokemonList = pokemonData.filter((pokemon) =>\r\n      pokemon.types.some((type) => type.type.name === name)\r\n    )\r\n    setPokemonData(filteredPokemonList)\r\n  }\r\n\r\n  function goToTheNextPage () {\r\n    setCurrentUrl(nextPage)\r\n  }\r\n\r\n  function goToThePreviousPage () {\r\n    setCurrentUrl(prevPage)\r\n  }\r\n\r\n  function load (url) {\r\n    setLoading(true)\r\n    setCurrentUrl(url)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header title is-2\">Pokedex App</div>\r\n      {loading\r\n        ? (\r\n        <>\r\n          <div className=\"loader__container\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        </>\r\n          )\r\n        : (\r\n        <div className=\"main\">\r\n          <div className=\"main__types-buttons\">\r\n          {types.map((type) => (\r\n            <button key={type.name} onClick={() => filterByType(type.name)} className=\"main__type-button\" style={{ backgroundColor: pokemonTypes[type.name] }}>\r\n              {type.name}\r\n            </button>\r\n          ))}\r\n          </div>\r\n          <button onClick={() => load(URL_ALL)} className=\"button is-warning is-focused\">Load `em all</button>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-query\"\r\n            className=\"input input is-normal\"\r\n            placeholder=\"Start filter the pokemons!\"\r\n            value={query}\r\n            onChange={handleInputChange}\r\n          />\r\n          <div className=\"main__container\">\r\n            { pokemonData.length\r\n              ? (\r\n                  pokemonData.map((pokemon) => (\r\n              <Card\r\n                key={pokemon.id}\r\n                pokemon={pokemon}\r\n                openModal={openModal}\r\n                selectPokemon={handlePokemonSelection}\r\n              />\r\n                  ))\r\n                )\r\n              : (\r\n              <div>No pokemons here. Try to load more and filter again</div>\r\n                )\r\n            }\r\n          </div>\r\n          <div className=\"main__button-container\">\r\n            {prevPage && (\r\n              <Button\r\n                action={() => goToThePreviousPage(prevPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                &lt; Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button\r\n                action={() => goToTheNextPage(nextPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                Next &gt;\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            style={modalStyles}\r\n            contentLabel=\"Example Modal\"\r\n            closeTimeoutMS={300}\r\n          >\r\n            <div>\r\n              {pokemon.map((pokemon) => (\r\n                <Stats\r\n                  pokemon={pokemon}\r\n                  key={pokemon.id}\r\n                  closeModal={closeModal}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export const URL = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}