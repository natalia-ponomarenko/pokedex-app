{"version":3,"sources":["components/Button/Button.jsx","helpers/pokemonTypes.js","components/Card/Card.jsx","components/Stats/Stats.jsx","helpers/api.js","helpers/modalStyles.js","helpers/constants.js","App.js","index.js"],"names":["Button","action","className","children","onClick","defaultProps","pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","unknown","shadow","Card","pokemon","selectPokemon","openModal","id","height","weight","name","src","onError","event","target","alt","types","map","type","style","backgroundColor","slot","moves","length","Stats","closeModal","stats","stat","base_stat","request","url","options","fetch","then","response","ok","Error","json","modalStyles","content","top","left","right","bottom","marginRight","transform","URL20","Modal","setAppElement","App","useState","currentUrl","setCurrentUrl","pokemonData","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","modalIsOpen","setIsOpen","setPokemon","setTypes","filterArray","setFilterArray","numberToLoad","setNumberToLoad","loadPokemon","data","a","Promise","all","res","filteredData","setFilteredData","filter","setFilter","useEffect","results","previous","next","dowloadData","query","toLowerCase","startsWith","handlePokemonSelection","pokemonId","load","document","getElementById","classList","toggle","includes","index","indexOf","splice","push","some","el","filterByType","onChange","e","value","handleSelectChange","placeholder","currentTarget","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45fc5c79.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../App.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ action, className, children }) => (\r\n  <button\r\n    className={className}\r\n    onClick={action}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func,\r\n  className: PropTypes.string,\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nButton.defaultProps = {\r\n  action: () => {},\r\n  className: 'button'\r\n}\r\n","const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD',\r\n  unknown: '#F3FF89',\r\n  shadow: '#9467B5'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => {\r\n  const addDefaultSrc = (event) => {\r\n    event.target.src = '../images/Poke_ball.png'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__card\"\r\n        onClick={() => {\r\n          selectPokemon(pokemon.id)\r\n          openModal()\r\n        }}\r\n      >\r\n        <div className=\"card__container-wrapper\">\r\n          <div className=\"card__height-container\">\r\n            <span className=\"card__height\">\r\n              <div>Height:</div>\r\n              <div>{`${pokemon.height / 10} m`}</div>\r\n            </span>\r\n          </div>\r\n          <div className=\"card__weight-container\">\r\n            <span className=\"card__weight\">\r\n              <div>Weight:</div>\r\n              <div>{`${pokemon.weight / 100} kg`}</div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__name\">{`${pokemon.name}`}</div>\r\n        <div className=\"card__image-container\">\r\n          <img\r\n            className=\"card__image\"\r\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n            onError={addDefaultSrc}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"card__types\">\r\n          {pokemon.types.map((type) => (\r\n            <div\r\n              className=\"card__type\"\r\n              key={type.slot}\r\n              style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"card__moves\">\r\n          {`Total moves: ${pokemon.moves.length}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        slot: PropTypes.number\r\n      })\r\n    ).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => {\n  return (\n    <div className='stats__container' onClick={closeModal}>\n      <div className='stats__image-container'>\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\n          alt={pokemon.name} className=\"stats__image\"\n        />\n      </div>\n      <div className='stats__name'>\n        {`${pokemon.name}`}\n      </div>\n      <div className='stats__stats'>\n        {pokemon.stats.map(stat => (\n          <div className='stats__stat-container' key={stat.stat.name}>\n            <div className='stats__stat-name'>\n              {stat.stat.name}\n            </div>\n            <div className='stats__base-stat'>\n            </div>\n              <div className='stats__base-stat-value'>\n                {stat.base_stat}\n              </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      base_stat: PropTypes.number.isRequired,\n      stat: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    })).isRequired\n  }),\n  selectPokemon: PropTypes.func,\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {},\n  selectPokemon: () => {}\n}\n","const typeUrl = 'https://pokeapi.co/api/v2/type/'\r\nconst URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n\r\nexport const request = (url, options = {}) => fetch(url, options)\r\n  .then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Pokemons weren\\'t loaded')\r\n    }\r\n\r\n    return response.json()\r\n  })\r\n\r\nexport const getAllPokemons = () => request(URL_ALL).then(data => data)\r\nexport const getTypes = () => request(typeUrl).then(data => data.results)\r\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n","export const URL = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n","import 'bulma'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport './App.scss'\r\nimport { Button } from './components/Button/Button'\r\nimport { Card } from './components/Card'\r\nimport { Stats } from './components/Stats/Stats'\r\nimport { getTypes } from './helpers/api'\r\nimport { modalStyles } from './helpers/modalStyles'\r\nimport pokemonTypes from './helpers/pokemonTypes'\r\nimport { URL_ALL, URL20, URL50 } from './helpers/constants'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction App () {\r\n  const [currentUrl, setCurrentUrl] = useState(URL20)\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextPage, setNextPage] = useState('')\r\n  const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [types, setTypes] = useState([])\r\n  const [filterArray, setFilterArray] = useState([])\r\n  const [numberToLoad, setNumberToLoad] = useState('20')\r\n\r\n  const loadPokemon = async (data) => {\r\n    const pokemon = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        return await fetch(pokemon.url)\r\n          .then((res) => res.json())\r\n          .then((data) => data)\r\n      })\r\n    )\r\n\r\n    setPokemonData(pokemon)\r\n  }\r\n\r\n  const [filteredData, setFilteredData] = useState(pokemonData)\r\n  const [filter, setFilter] = useState('')\r\n\r\n  useEffect(() => {\r\n    const dowloadData = async (url) => {\r\n      setLoading(true)\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      loadPokemon(data.results)\r\n      setPrevPage(data.previous)\r\n      setNextPage(data.next)\r\n      getTypes().then((types) => setTypes(types))\r\n      setLoading(false)\r\n    }\r\n    dowloadData(currentUrl)\r\n    setFilterArray([])\r\n  }, [currentUrl])\r\n\r\n  useEffect(() => {\r\n    if (!filter) {\r\n      setFilteredData(pokemonData)\r\n      return\r\n    }\r\n    const query = filter.toLowerCase()\r\n    const filteredData = filter\r\n      ? pokemonData.filter(pokemon => pokemon.name.toLowerCase().startsWith(query))\r\n      : pokemonData\r\n    setFilteredData(filteredData)\r\n  }, [filter, pokemonData])\r\n\r\n  function openModal () {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  function closeModal () {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter((pokemon) => pokemon.id === pokemonId))\r\n  }\r\n\r\n  function filterByType (name) {\r\n    const filterButton = document.getElementById(name)\r\n    filterButton.classList.toggle('pressed')\r\n    if (filterArray.includes(name)) {\r\n      const index = filterArray.indexOf(name)\r\n      if (index > -1) {\r\n        filterArray.splice(index, 1)\r\n      }\r\n    } else {\r\n      filterArray.push(name)\r\n    }\r\n\r\n    setFilterArray(filterArray)\r\n\r\n    if (!filterArray.length) {\r\n      setFilteredData(pokemonData)\r\n      return\r\n    }\r\n\r\n    const filteredData = pokemonData.filter((pokemon) =>\r\n      pokemon.types.some((el) => filterArray.includes(el.type.name.toLowerCase()))\r\n    )\r\n    setFilteredData(filteredData)\r\n  }\r\n\r\n  function handleSelectChange (e) {\r\n    switch (e.target.value) {\r\n      case '20':\r\n        load(URL20)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      case '50':\r\n        load(URL50)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      case 'all':\r\n        load(URL_ALL)\r\n        setNumberToLoad(e.target.value)\r\n        break\r\n      default:\r\n        load(URL20)\r\n    }\r\n  }\r\n\r\n  function load (url) {\r\n    setCurrentUrl(url)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header title is-2\">Pokedex App</div>\r\n      {loading\r\n        ? (\r\n        <>\r\n          <div className=\"loader__container\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        </>\r\n          )\r\n        : (\r\n        <div className=\"main\">\r\n          <div className=\"main__types-buttons\">\r\n          {types.map((type) => (\r\n            <button key={type.name} id={type.name} onClick={() => filterByType(type.name)} className=\"main__type-button\" style={{ backgroundColor: pokemonTypes[type.name] }}>\r\n              {type.name}\r\n            </button>\r\n          ))}\r\n          </div>\r\n          <select onChange={(e) => handleSelectChange(e)} value={numberToLoad}>\r\n          <option>choose the number to load</option>\r\n            <option value='20'>20</option>\r\n            <option value='50'>50</option>\r\n            <option value='all'>all</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-query\"\r\n            className=\"input input is-normal\"\r\n            placeholder=\"Start filter the pokemons!\"\r\n            value={filter}\r\n            onChange={({ currentTarget: { value } }) => setFilter(value)}\r\n          />\r\n          <div className=\"main__container\">\r\n            { pokemonData.length\r\n              ? (\r\n                  filteredData.map((pokemon) => (\r\n              <Card\r\n                key={pokemon.id}\r\n                pokemon={pokemon}\r\n                openModal={openModal}\r\n                selectPokemon={handlePokemonSelection}\r\n              />\r\n                  ))\r\n                )\r\n              : (\r\n              <div>No pokemons here. Try to load more and filter again</div>\r\n                )\r\n            }\r\n          </div>\r\n          <div className=\"main__button-container\">\r\n            {prevPage && (\r\n              <Button\r\n                action={() => load(prevPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                &lt; Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button\r\n                action={() => load(nextPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                Next &gt;\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            style={modalStyles}\r\n            contentLabel=\"Example Modal\"\r\n            closeTimeoutMS={300}\r\n          >\r\n            <div>\r\n              {pokemon.map((pokemon) => (\r\n                <Stats\r\n                  pokemon={pokemon}\r\n                  key={pokemon.id}\r\n                  closeModal={closeModal}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}