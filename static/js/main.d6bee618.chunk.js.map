{"version":3,"sources":["helpers/pokemonTypes.js","components/Card/Card.jsx","components/Stats/Stats.jsx","helpers/api.js","helpers/modalStyles.js","App.js","helpers/constants.js","index.js"],"names":["pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Card","pokemon","selectPokemon","openModal","className","onClick","id","height","weight","name","src","onError","event","target","alt","types","map","type","style","backgroundColor","slot","moves","length","defaultProps","Stats","closeModal","stats","stat","base_stat","request","url","options","fetch","then","response","ok","Error","json","modalStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","App","useState","pokemonData","setPokemonData","loading","setLoading","modalIsOpen","setIsOpen","query","setQuery","setPokemon","setTypes","dowloadData","a","data","Promise","all","res","loadPokemon","results","console","log","useEffect","handlePokemonSelection","pokemonId","filter","filteredPokemonList","some","filterByType","placeholder","value","onChange","inputText","toLowerCase","startsWith","includes","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAqBeA,G,MArBM,CACnBC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,SAAU,UACVC,MAAO,UACPC,IAAK,UACLC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,IAAK,UACLC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,MAAO,Y,eCbIC,EAAO,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAK7C,OACE,qBAAKC,UAAU,OAAf,SACE,sBACEA,UAAU,aACVC,QAAS,WACPH,EAAcD,EAAQK,IACtBH,KAJJ,UAOE,sBAAKC,UAAU,0BAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,uBAAMA,UAAU,eAAhB,UACE,0CACA,wCAASH,EAAQM,OAAS,GAA1B,aAGJ,qBAAKH,UAAU,yBAAf,SACE,uBAAMA,UAAU,eAAhB,UACE,0CACA,wCAASH,EAAQO,OAAS,IAA1B,iBAIN,qBAAKJ,UAAU,aAAf,mBAAgCH,EAAQQ,QACxC,qBAAKL,UAAU,wBAAf,SACE,qBACEA,UAAU,cACVM,IAAG,mFAA8ET,EAAQK,GAAtF,QACHK,QAhCY,SAACC,GACrBA,EAAMC,OAAOH,IAAM,2BAgCXI,IAAKb,EAAQQ,SAGjB,qBAAKL,UAAU,cAAf,SACGH,EAAQc,MAAMC,KAAI,SAACC,GAAD,OACjB,qBACEb,UAAU,aAEVc,MAAO,CAAEC,gBAAiBtC,EAAaoC,EAAKA,KAAKR,OAHnD,SAKGQ,EAAKA,KAAKR,MAHNQ,EAAKG,WAOhB,qBAAKhB,UAAU,cAAf,gCACmBH,EAAQoB,MAAMC,gBAwBzCtB,EAAKuB,aAAe,CAClBtB,QAAS,I,UC3EEuB,EAAQ,SAAC,GAA6B,IAA3BvB,EAA0B,EAA1BA,QAASwB,EAAiB,EAAjBA,WAC/B,OACE,sBAAKrB,UAAU,mBAAmBC,QAASoB,EAA3C,UACE,qBAAKrB,UAAU,yBAAf,SACE,qBACEM,IAAG,yCAAoCT,EAAQK,GAA5C,QACHQ,IAAKb,EAAQQ,KAAML,UAAU,mBAGjC,qBAAKA,UAAU,cAAf,mBACMH,EAAQQ,QAEd,qBAAKL,UAAU,eAAf,SACGH,EAAQyB,MAAMV,KAAI,SAAAW,GAAI,OACrB,sBAAKvB,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAf,SACGuB,EAAKA,KAAKlB,OAEb,qBAAKL,UAAU,qBAEb,qBAAKA,UAAU,yBAAf,SACGuB,EAAKC,cAPgCD,EAAKA,KAAKlB,eA+BhEe,EAAMD,aAAe,CACnBtB,QAAS,GACTC,cAAe,cCnDjB,IAGa2B,EAAU,SAACC,GAAD,IAAMC,EAAN,uDAAgB,GAAhB,OAAuBC,MAAMF,EAAKC,GACtDE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,2BAGlB,OAAOF,EAASG,WCTPC,EAAc,CACzBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BCKfC,IAAMC,cAAc,SAqMLC,MAjMf,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA8BR,mBAAS,IAAvC,mBAAOhD,EAAP,KAAgByD,EAAhB,KACA,EAA0BT,mBAAS,IAAnC,mBAAOlC,EAAP,KAAc4C,EAAd,KAUMC,EAAW,uCAAG,8BAAAC,EAAA,6DAClBR,GAAW,GADO,SAEKrB,MClCN,+CDgCC,cAEZE,EAFY,gBAGCA,EAASG,OAHV,OAGZyB,EAHY,sCAAAD,EAAA,MAKE,WAAOC,GAAP,eAAAD,EAAA,sEACIE,QAAQC,IAC5BF,EAAK9C,IAAL,uCAAS,WAAOf,GAAP,SAAA4D,EAAA,sEACM7B,MAAM/B,EAAQ6B,KACxBG,MAAK,SAACgC,GAAD,OAASA,EAAI5B,UAClBJ,MAAK,SAAC6B,GAAD,OAAUA,KAHX,mFAAT,wDAFgB,OACZ7D,EADY,OASlBkD,EAAelD,GATG,2CALF,qDAiBlBiE,CAAYJ,EAAKK,SFtCStC,EAbd,mCAa+BI,MAAK,SAAA6B,GAAI,OAAIA,EAAKK,WEuClDlC,MAAK,SAAClB,GAAD,OAAW4C,EAAS5C,MACpCsC,GAAW,GACXe,QAAQC,IAAInB,GApBM,4CAAH,qDA2BjB,SAAS/C,IACPoD,GAAU,GAGZ,SAAS9B,IACP8B,GAAU,GATZe,qBAAU,WACRV,MACC,IAUH,IAAMW,EAAyB,SAACC,GAC9Bd,EAAWR,EAAYuB,QAAO,SAACxE,GAAD,OAAaA,EAAQK,KAAOkE,OAuB5D,OACE,qCACE,qBAAKpE,UAAU,oBAAf,yBACCgD,EAEC,mCACE,qBAAKhD,UAAU,oBAAf,SACE,qBAAKA,UAAU,eAKnB,sBAAKA,UAAU,OAAf,UACGW,EAAMC,KAAI,SAACC,GAAD,OACT,wBAAwBZ,QAAS,kBArB3C,SAAuBI,GACrB,IAAMiE,EAAsBxB,EAAYuB,QAAO,SAACxE,GAAD,OAC7CA,EAAQc,MAAM4D,MAAK,SAAC1D,GAAD,OAAUA,EAAKA,KAAKR,OAASA,QAElD0C,EAAeuB,GAiBgCE,CAAa3D,EAAKR,OAAzD,SACGQ,EAAKR,MADKQ,EAAKR,SAIpB,uBACEQ,KAAK,OACLX,GAAG,eACHF,UAAU,wBACVyE,YAAY,6BACZC,MAAOtB,EACPuB,SA5CW,SAACnE,GACpB,IACMoE,EADYpE,EAAMC,OAAhBiE,MACgBG,cACxBxB,EAASuB,GACT7B,EACED,EAAYuB,QACV,SAACxE,GAAD,OACEA,EAAQQ,KAAKwE,cAAcC,WAAWF,IACtC/E,EAAQQ,KAAKwE,cAAcE,SAASH,UAsCpC,qBAAK5E,UAAU,kBAAf,SACI8C,EAAY5B,OAER4B,EAAYlC,KAAI,SAACf,GAAD,OACpB,cAAC,EAAD,CAEEA,QAASA,EACTE,UAAWA,EACXD,cAAeqE,GAHVtE,EAAQK,OAQf,wFAIJ,qBAAKF,UAAU,2BAkDf,cAAC,IAAD,CACEgF,OAAQ9B,EACR+B,eAAgB5D,EAChBP,MAAOoB,EACPgD,aAAa,gBACbC,eAAgB,IALlB,SAOE,8BACGtF,EAAQe,KAAI,SAACf,GAAD,OACX,cAAC,EAAD,CACEA,QAASA,EAETwB,WAAYA,GADPxB,EAAQK,kBEhM/BkF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6bee618.chunk.js","sourcesContent":["const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => {\r\n  const addDefaultSrc = (event) => {\r\n    event.target.src = '../images/Poke_ball.png'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__card\"\r\n        onClick={() => {\r\n          selectPokemon(pokemon.id)\r\n          openModal()\r\n        }}\r\n      >\r\n        <div className=\"card__container-wrapper\">\r\n          <div className=\"card__height-container\">\r\n            <span className=\"card__height\">\r\n              <div>Height:</div>\r\n              <div>{`${pokemon.height / 10} m`}</div>\r\n            </span>\r\n          </div>\r\n          <div className=\"card__weight-container\">\r\n            <span className=\"card__weight\">\r\n              <div>Weight:</div>\r\n              <div>{`${pokemon.weight / 100} kg`}</div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__name\">{`${pokemon.name}`}</div>\r\n        <div className=\"card__image-container\">\r\n          <img\r\n            className=\"card__image\"\r\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n            onError={addDefaultSrc}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"card__types\">\r\n          {pokemon.types.map((type) => (\r\n            <div\r\n              className=\"card__type\"\r\n              key={type.slot}\r\n              style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"card__moves\">\r\n          {`Total moves: ${pokemon.moves.length}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        slot: PropTypes.number\r\n      })\r\n    ).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => {\n  return (\n    <div className='stats__container' onClick={closeModal}>\n      <div className='stats__image-container'>\n        <img\n          src={`https://www.serebii.net/art/th/${pokemon.id}.png`}\n          alt={pokemon.name} className=\"stats__image\"\n        />\n      </div>\n      <div className='stats__name'>\n        {`${pokemon.name}`}\n      </div>\n      <div className='stats__stats'>\n        {pokemon.stats.map(stat => (\n          <div className='stats__stat-container' key={stat.stat.name}>\n            <div className='stats__stat-name'>\n              {stat.stat.name}\n            </div>\n            <div className='stats__base-stat'>\n            </div>\n              <div className='stats__base-stat-value'>\n                {stat.base_stat}\n              </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      base_stat: PropTypes.number.isRequired,\n      stat: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    })).isRequired\n  }),\n  selectPokemon: PropTypes.func,\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {},\n  selectPokemon: () => {}\n}\n","const typeUrl = 'https://pokeapi.co/api/v2/type/'\r\nconst URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n\r\nexport const request = (url, options = {}) => fetch(url, options)\r\n  .then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Pokemons weren\\'t loaded')\r\n    }\r\n\r\n    return response.json()\r\n  })\r\n\r\nexport const getAllPokemons = () => request(URL_ALL).then(data => data)\r\nexport const getTypes = () => request(typeUrl).then(data => data.results)\r\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n","import 'bulma'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport './App.scss'\r\n// import { Button } from './components/Button/Button'\r\nimport { Card } from './components/Card'\r\nimport { Stats } from './components/Stats/Stats'\r\nimport { getTypes } from './helpers/api'\r\nimport { URL50 } from './helpers/constants'\r\n// , URL20, URL50, URL_ALL } from './helpers/constants'\r\nimport { modalStyles } from './helpers/modalStyles'\r\n\r\nModal.setAppElement('#root')\r\n\r\n// const URL = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\nfunction App () {\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  // const [nextPage, setNextPage] = useState('')\r\n  // const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [types, setTypes] = useState([])\r\n\r\n  //  const pagination = async (page) => {\r\n  //   if (page === prevPage && !prevPage) {\r\n  //     return\r\n  //   }\r\n  //   setNextPage(data.next)\r\n  //   setPrevPage(data.previous)\r\n  // }\r\n\r\n  const dowloadData = async () => {\r\n    setLoading(true)\r\n    const response = await fetch(URL50)\r\n    const data = await response.json()\r\n\r\n    const loadPokemon = async (data) => {\r\n      const pokemon = await Promise.all(\r\n        data.map(async (pokemon) => {\r\n          return await fetch(pokemon.url)\r\n            .then((res) => res.json())\r\n            .then((data) => data)\r\n        })\r\n      )\r\n\r\n      setPokemonData(pokemon)\r\n    }\r\n\r\n    loadPokemon(data.results)\r\n    getTypes().then((types) => setTypes(types))\r\n    setLoading(false)\r\n    console.log(pokemonData)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dowloadData()\r\n  }, [])\r\n\r\n  function openModal () {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  function closeModal () {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter((pokemon) => pokemon.id === pokemonId))\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target\r\n    const inputText = value.toLowerCase()\r\n    setQuery(inputText)\r\n    setPokemonData(\r\n      pokemonData.filter(\r\n        (pokemon) =>\r\n          pokemon.name.toLowerCase().startsWith(inputText) ||\r\n          pokemon.name.toLowerCase().includes(inputText)\r\n      )\r\n    )\r\n  }\r\n\r\n  function filterByType (name) {\r\n    const filteredPokemonList = pokemonData.filter((pokemon) =>\r\n      pokemon.types.some((type) => type.type.name === name)\r\n    )\r\n    setPokemonData(filteredPokemonList)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header title is-2\">Pokedex App</div>\r\n      {loading\r\n        ? (\r\n        <>\r\n          <div className=\"loader__container\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        </>\r\n          )\r\n        : (\r\n        <div className=\"main\">\r\n          {types.map((type) => (\r\n            <button key={type.name} onClick={() => filterByType(type.name)}>\r\n              {type.name}\r\n            </button>\r\n          ))}\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-query\"\r\n            className=\"input input is-normal\"\r\n            placeholder=\"Start filter the pokemons!\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"main__container\">\r\n            { pokemonData.length\r\n              ? (\r\n                  pokemonData.map((pokemon) => (\r\n              <Card\r\n                key={pokemon.id}\r\n                pokemon={pokemon}\r\n                openModal={openModal}\r\n                selectPokemon={handlePokemonSelection}\r\n              />\r\n                  ))\r\n                )\r\n              : (\r\n              <div>No pokemons here. Try to load more and filter again</div>\r\n                )\r\n            }\r\n          </div>\r\n          <div className=\"main__button-container\">\r\n            {/* {prevPage && (\r\n              <Button\r\n                action={() => pagination(prevPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                &lt; Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button\r\n                action={() => pagination(nextPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                Next &gt;\r\n              </Button>\r\n            )} */}\r\n            {/* {pokemonData.length > 10 && (\r\n              <Button\r\n                action={() => load(URL)}\r\n                className=\"button is-info is-focused\"\r\n              >\r\n                Load 10\r\n              </Button>\r\n            )}\r\n            {pokemonData.length < 10 && (\r\n              <Button\r\n                action={() => load(URL_ALL)}\r\n                className=\"button is-info is-focused\"\r\n              >\r\n                Load all?\r\n              </Button>\r\n            )}\r\n            {pokemonData.length !== 20 && (\r\n              <Button\r\n                action={() => load(URL20)}\r\n                className=\"button is-info is-focused\"\r\n              >\r\n                Load 20\r\n              </Button>\r\n            )}\r\n            {pokemonData.length !== 50 && (\r\n              <Button\r\n                action={() => load(URL50)}\r\n                className=\"button is-info is-focused\"\r\n              >\r\n                Load 50\r\n              </Button>\r\n            )} */}\r\n          </div>\r\n          <Modal\r\n            isOpen={modalIsOpen}\r\n            onRequestClose={closeModal}\r\n            style={modalStyles}\r\n            contentLabel=\"Example Modal\"\r\n            closeTimeoutMS={300}\r\n          >\r\n            <div>\r\n              {pokemon.map((pokemon) => (\r\n                <Stats\r\n                  pokemon={pokemon}\r\n                  key={pokemon.id}\r\n                  closeModal={closeModal}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export const URL = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}