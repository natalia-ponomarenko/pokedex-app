{"version":3,"sources":["components/Button/Button.jsx","components/Loader/Loader.jsx","helpers/modalStyles.js","components/Stats/Stats.jsx","components/StatsList/StatsList.jsx","helpers/pokemonTypes.js","components/Card/Card.jsx","components/PokemonList/PokemonList.jsx","components/Input/Input.jsx","components/Header/Header.jsx","components/TypesList/TypesList.jsx","components/Message/Message.jsx","components/Select/Select.jsx","components/Icon/Icon.jsx","helpers/constants.js","helpers/api.js","App.js","index.js"],"names":["Button","action","className","children","onClick","Loader","defaultProps","modalStyles","content","top","left","right","bottom","marginRight","transform","overlay","zIndex","Stats","pokemon","closeModal","src","id","onError","event","target","alt","name","stats","map","stat","base_stat","StatsList","modalIsOpen","isOpen","onRequestClose","style","contentLabel","closeTimeoutMS","Modal","setAppElement","pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","unknown","shadow","Card","selectPokemon","openModal","height","weight","types","type","backgroundColor","slot","moves","length","PokemonList","filteredData","handlePokemonSelection","Input","setFilteredData","pokemonData","useState","filter","setFilter","useEffect","query","toLowerCase","startsWith","placeholder","value","onChange","currentTarget","Header","href","rel","TypesList","Message","text","Select","handleSelectChange","Icon","side","URL10","URL_ALL","request","url","options","fetch","then","response","ok","Error","json","App","currentUrl","setCurrentUrl","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","setIsOpen","setPokemon","setTypes","filterArray","setFilterArray","numberToLoad","setNumberToLoad","errorText","setErrorText","loadPokemon","data","a","Promise","all","res","message","results","previous","next","dowloadData","loadPokemons","document","getElementById","classList","toggle","includes","index","indexOf","splice","push","some","el","pokemonId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1dbff416.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ action, className, children }) => (\r\n  <button className={className} onClick={action}>\r\n    {children}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  children: PropTypes.array || PropTypes.string\r\n}\r\n\r\nButton.defaultProps = {\r\n  className: 'button'\r\n}\r\n","import React from 'react'\n\nexport function Loader () {\n  return (\n    <div className=\"loader__container\">\n      <div className=\"loader\"></div>\n    </div>\n  )\n}\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  overlay: { zIndex: 4 }\n}\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => {\n  const addDefaultSrc = (event) => {\n    event.target.src = '../images/Poke_ball.png'\n  }\n\n  return (\n    <div className=\"stats__container\" onClick={closeModal}>\n      <div className=\"stats__image-container\">\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\n          onError={addDefaultSrc}\n          alt={pokemon.name}\n          className=\"stats__image\"\n        />\n      </div>\n      <div className=\"stats__name\">{`${pokemon.name}`}</div>\n      <div className=\"stats__stats\">\n        {pokemon.stats.map((stat) => (\n          <div className=\"stats__stat-container\" key={stat.stat.name}>\n            <div className=\"stats__stat-name\">{stat.stat.name}</div>\n            <div className=\"stats__base-stat\"></div>\n            <div className=\"stats__base-stat-value\">{stat.base_stat}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(\n      PropTypes.shape({\n        base_stat: PropTypes.number.isRequired,\n        stat: PropTypes.shape({\n          name: PropTypes.string.isRequired\n        })\n      })\n    ).isRequired\n  }),\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {}\n}\n","import React from 'react'\nimport Modal from 'react-modal'\nimport { modalStyles } from '../../helpers/modalStyles'\nimport { Stats } from '../Stats/Stats'\nimport PropTypes from 'prop-types'\n\nModal.setAppElement('#root')\n\nexport function StatsList ({ pokemon, modalIsOpen, closeModal }) {\n  return (\n    <>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={modalStyles}\n        contentLabel=\"Example Modal\"\n        closeTimeoutMS={300}\n      >\n        <div>\n          {pokemon.map((pokemon) => (\n            <Stats\n              pokemon={pokemon}\n              key={pokemon.id}\n              closeModal={closeModal}\n            />\n          ))}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nStatsList.propTypes = {\n  pokemon: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      weight: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      types: PropTypes.arrayOf(\n        PropTypes.shape({\n          slot: PropTypes.number\n        })\n      ).isRequired,\n      moves: PropTypes.arrayOf(PropTypes.object).isRequired\n    })\n  ),\n  modalIsOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired\n}\n\nStatsList.defaultProps = {\n  pokemon: null\n}\n","const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD',\r\n  unknown: '#F3FF89',\r\n  shadow: '#9467B5'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => {\r\n  const addDefaultSrc = (event) => {\r\n    event.target.src = '../images/Poke_ball.png'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card__card\"\r\n        onClick={() => {\r\n          selectPokemon(pokemon.id)\r\n          openModal()\r\n        }}\r\n      >\r\n        <div className=\"card__container-wrapper\">\r\n          <div className=\"card__height-container\">\r\n            <span className=\"card__height\">\r\n              <div>Height:</div>\r\n              <div>{`${pokemon.height / 10} m`}</div>\r\n            </span>\r\n          </div>\r\n          <div className=\"card__weight-container\">\r\n            <span className=\"card__weight\">\r\n              <div>Weight:</div>\r\n              <div>{`${pokemon.weight / 100} kg`}</div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__name\">{`${pokemon.name}`}</div>\r\n        <div className=\"card__image-container\">\r\n          <img\r\n            className=\"card__image\"\r\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\r\n            onError={addDefaultSrc}\r\n            alt={pokemon.name}\r\n          />\r\n        </div>\r\n        <div className=\"card__types\">\r\n          {pokemon.types.map((type) => (\r\n            <div\r\n              className=\"card__type\"\r\n              key={type.slot}\r\n              style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"card__moves\">\r\n          {`Total moves: ${pokemon.moves.length}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        slot: PropTypes.number\r\n      })\r\n    ).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport { Card } from '../Card/Card'\n\nexport function PokemonList ({\n  filteredData,\n  openModal,\n  handlePokemonSelection\n}) {\n  return filteredData.map((pokemon) => (\n    <Card\n      key={pokemon.id}\n      pokemon={pokemon}\n      openModal={openModal}\n      selectPokemon={handlePokemonSelection}\n    />\n  ))\n}\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nexport function Input ({ setFilteredData, pokemonData }) {\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    if (!filter) {\n      setFilteredData(pokemonData)\n      return\n    }\n    const query = filter.toLowerCase()\n    const filteredData = filter\n      ? pokemonData.filter((pokemon) =>\n        pokemon.name.toLowerCase().startsWith(query)\n      )\n      : pokemonData\n    setFilteredData(filteredData)\n  }, [filter, pokemonData])\n\n  return (\n    <input\n      type=\"text\"\n      id=\"search-query\"\n      className=\"input is-success\"\n      placeholder=\"Start filter the pokemons!\"\n      value={filter}\n      onChange={({ currentTarget: { value } }) => setFilter(value)}\n    />\n  )\n}\n\nInput.propTypes = {\n  pokemonData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      weight: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      types: PropTypes.arrayOf(\n        PropTypes.shape({\n          slot: PropTypes.number\n        })\n      ).isRequired,\n      moves: PropTypes.arrayOf(PropTypes.object).isRequired\n    })\n  ),\n  setFilteredData: PropTypes.func.isRequired\n}\n\nInput.defaultProps = {\n  pokemon: null\n}\n","import React from 'react'\nimport './Header.scss'\n\nexport function Header () {\n  return (\n    <div className=\"header\">\n      <img\n        src=\"./images/pokemon-logo.png\"\n        alt=\"Pokemon Logo\"\n        className=\"header__image\"\n      />\n      <a\n        href=\"https://pokeapi.co/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"header__link\"\n      >\n        PokeAPI\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport pokemonTypes from '../../helpers/pokemonTypes'\nimport './TypesList.scss'\n\nexport function TypesList ({ types, filter }) {\n  return (\n    <div>\n      {types.map((type) => (\n        <button\n          key={type.name}\n          id={type.name}\n          onClick={() => filter(type.name)}\n          className=\"type-button\"\n          style={{ backgroundColor: pokemonTypes[type.name] }}\n        >\n          {type.name}\n        </button>\n      ))}\n    </div>\n  )\n}\n\nTypesList.propTypes = {\n  types: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string\n    })\n  ).isRequired,\n  filter: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport function Message ({ text }) {\n  return (\n    <div className=\"main__message\" id=\"message\">\n      {text}\n    </div>\n  )\n}\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport function Select ({ handleSelectChange, value }) {\n  return (\n    <div className=\"select is-success\">\n      <select\n        value={value}\n        onChange={(event) => handleSelectChange(event)}\n        className=\"is-hovered\"\n      >\n        <option value=\"10\">load 10</option>\n        <option value=\"20\">load 20</option>\n        <option value=\"50\">load 50</option>\n        <option value=\"all\">load all</option>\n      </select>\n    </div>\n  )\n}\n\nSelect.propTypes = {\n  handleSelectChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport function Icon ({ side }) {\n  return (\n    <span>\n      <i className={`fa-solid fa-caret-${side} main__icon`}></i>\n    </span>\n  )\n}\n\nIcon.propTypes = {\n  side: PropTypes.string.isRequired\n}\n","export const URL10 = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\nexport const typeUrl = 'https://pokeapi.co/api/v2/type/'\r\n","import { typeUrl, URL_ALL } from './constants'\r\n\r\nexport const request = (url, options = {}) =>\r\n  fetch(url, options).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(\"Pokemons weren't loaded\")\r\n    }\r\n\r\n    return response.json()\r\n  })\r\n\r\nexport const getAllPokemons = () => request(URL_ALL).then((data) => data)\r\nexport const getTypes = () => request(typeUrl).then((data) => data.results)\r\n","import 'bulma'\r\nimport './styles/App.scss'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button } from './components/Button'\r\nimport { Loader } from './components/Loader'\r\nimport { StatsList } from './components/StatsList'\r\nimport { PokemonList } from './components/PokemonList'\r\nimport { Input } from './components/Input'\r\nimport { Header } from './components/Header'\r\nimport { TypesList } from './components/TypesList'\r\nimport { Message } from './components/Message'\r\nimport { Select } from './components/Select'\r\nimport { Icon } from './components/Icon'\r\nimport { getTypes } from './helpers/api'\r\nimport { URL10, URL20, URL50, URL_ALL } from './helpers/constants'\r\n\r\nfunction App () {\r\n  const [currentUrl, setCurrentUrl] = useState(URL10)\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextPage, setNextPage] = useState('')\r\n  const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [types, setTypes] = useState([])\r\n  const [filterArray, setFilterArray] = useState([])\r\n  const [filteredData, setFilteredData] = useState(pokemonData)\r\n  const [numberToLoad, setNumberToLoad] = useState('')\r\n  const [errorText, setErrorText] = useState('')\r\n\r\n  const loadPokemon = async (data) => {\r\n    try {\r\n      const pokemon = await Promise.all(\r\n        data.map(async (pokemon) => {\r\n          return await fetch(pokemon.url)\r\n            .then((res) => res.json())\r\n            .then((data) => data)\r\n        })\r\n      )\r\n      setPokemonData(pokemon)\r\n    } catch (error) {\r\n      setErrorText(error.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const dowloadData = async (url) => {\r\n      try {\r\n        setLoading(true)\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        loadPokemon(data.results)\r\n        setPrevPage(data.previous)\r\n        setNextPage(data.next)\r\n        getTypes().then((types) => setTypes(types))\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setErrorText(error.message)\r\n      }\r\n    }\r\n    dowloadData(currentUrl)\r\n    setFilterArray([])\r\n  }, [currentUrl])\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter((pokemon) => pokemon.id === pokemonId))\r\n  }\r\n\r\n  const filterByType = (name) => {\r\n    const filterButton = document.getElementById(name)\r\n    filterButton.classList.toggle('pressed')\r\n    if (filterArray.includes(name)) {\r\n      const index = filterArray.indexOf(name)\r\n      if (index > -1) {\r\n        filterArray.splice(index, 1)\r\n      }\r\n    } else {\r\n      filterArray.push(name)\r\n    }\r\n\r\n    setFilterArray(filterArray)\r\n\r\n    if (!filterArray.length) {\r\n      setFilteredData(pokemonData)\r\n      return\r\n    }\r\n\r\n    const filteredData = pokemonData.filter((pokemon) =>\r\n      pokemon.types.some((el) =>\r\n        filterArray.includes(el.type.name.toLowerCase())\r\n      )\r\n    )\r\n    setFilteredData(filteredData)\r\n  }\r\n\r\n  const loadPokemons = (url) => {\r\n    setCurrentUrl(url)\r\n  }\r\n\r\n  const handleSelectChange = (event) => {\r\n    switch (event.target.value) {\r\n      case '10':\r\n        loadPokemons(URL10)\r\n        setNumberToLoad(event.target.value)\r\n        break\r\n      case '20':\r\n        loadPokemons(URL20)\r\n        setNumberToLoad(event.target.value)\r\n        break\r\n      case '50':\r\n        loadPokemons(URL50)\r\n        setNumberToLoad(event.target.value)\r\n        break\r\n      case 'all':\r\n        loadPokemons(URL_ALL)\r\n        setNumberToLoad(event.target.value)\r\n        break\r\n      default:\r\n        loadPokemons(URL10)\r\n        setNumberToLoad('10')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {loading\r\n        ? (\r\n        <Loader />\r\n          )\r\n        : (\r\n        <div className=\"main\">\r\n          <div className=\"main__types-buttons\">\r\n            <TypesList types={types} filter={filterByType} />\r\n          </div>\r\n          <div className=\"main__query-wrapper\">\r\n            <Select\r\n              value={numberToLoad}\r\n              handleSelectChange={handleSelectChange}\r\n            />\r\n            <Input\r\n              setFilteredData={setFilteredData}\r\n              pokemonData={pokemonData}\r\n            />\r\n          </div>\r\n          <div className=\"main__container\">\r\n            {filteredData.length\r\n              ? (\r\n              <PokemonList\r\n                filteredData={filteredData}\r\n                openModal={openModal}\r\n                handlePokemonSelection={handlePokemonSelection}\r\n              />\r\n                )\r\n              : (\r\n              <Message\r\n                text={errorText || 'No pokemons here. Try to load more!'}\r\n              />\r\n                )}\r\n          </div>\r\n          <div className=\"main__button-container\">\r\n            {prevPage && (\r\n              <Button\r\n                action={() => loadPokemons(prevPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                <Icon side=\"left\" />\r\n                Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button\r\n                action={() => loadPokemons(nextPage)}\r\n                className=\"button is-warning is-focused\"\r\n              >\r\n                Next\r\n                <Icon side=\"right\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <StatsList\r\n            pokemon={pokemon}\r\n            modalIsOpen={modalIsOpen}\r\n            closeModal={closeModal}\r\n          />\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}