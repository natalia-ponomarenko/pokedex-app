{"version":3,"sources":["components/Button/Button.jsx","helpers/pokemonTypes.js","components/Card/Card.jsx","components/Stats/Stats.jsx","helpers/api.js","helpers/constants.js","helpers/modalStyles.js","App.js","index.js"],"names":["Button","action","className","children","onClick","defaultProps","pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Card","pokemon","selectPokemon","openModal","id","height","weight","name","src","alt","types","map","type","style","backgroundColor","slot","moves","length","Stats","closeModal","stats","stat","base_stat","getAllPokemon","url","a","Promise","resolve","reject","fetch","then","response","json","data","catch","error","Error","getPokemon","URL","modalStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","App","useState","pokemonData","setPokemonData","nextPage","setNextPage","prevPage","setPrevPage","loading","setLoading","modalIsOpen","setIsOpen","query","setQuery","setPokemon","useEffect","next","previous","loadPokemon","results","downloadData","all","handlePokemonSelection","pokemonId","filter","load","pagination","page","placeholder","value","onChange","event","inputText","target","toLowerCase","startsWith","includes","isOpen","onRequestClose","contentLabel","closeTimeoutMS","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e01b102.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../App.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ action, className, children }) => (\r\n  <button\r\n    className={className}\r\n    onClick={action}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  action: PropTypes.func,\r\n  className: PropTypes.string,\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nButton.defaultProps = {\r\n  action: () => {},\r\n  className: 'button'\r\n}\r\n","const pokemonTypes = {\r\n  normal: '#A8A77A',\r\n  fire: '#EE8130',\r\n  water: '#6390F0',\r\n  electric: '#F7D02C',\r\n  grass: '#7AC74C',\r\n  ice: '#96D9D6',\r\n  fighting: '#C22E28',\r\n  poison: '#A33EA1',\r\n  ground: '#E2BF65',\r\n  flying: '#A98FF3',\r\n  psychic: '#F95587',\r\n  bug: '#A6B91A',\r\n  rock: '#B6A136',\r\n  ghost: '#735797',\r\n  dragon: '#6F35FC',\r\n  dark: '#705746',\r\n  steel: '#B7B7CE',\r\n  fairy: '#D685AD'\r\n}\r\n\r\nexport default pokemonTypes\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport pokemonTypes from '../../helpers/pokemonTypes'\r\nimport './Card.scss'\r\n\r\nexport const Card = ({ pokemon, selectPokemon, openModal }) => (\r\n<div className=\"card\">\r\n    <div className='card__card'\r\n      onClick={() => {\r\n        selectPokemon(pokemon.id)\r\n        openModal()\r\n      }}>\r\n      <div className=\"card__container-wrapper\">\r\n        <div className='card__height-container'>\r\n          <span className='card__height'>\r\n            <div>\r\n              Height:\r\n            </div>\r\n            <div>\r\n              {`${pokemon.height / 10} m`}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className='card__weight-container'>\r\n          <span className='card__weight'>\r\n            <div>\r\n              Weight:\r\n            </div>\r\n            <div>\r\n              {`${pokemon.weight / 100} kg`}\r\n            </div>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className='card__name'>\r\n        {`${pokemon.name}`}\r\n      </div>\r\n      <div className='card__image-container'>\r\n        <img\r\n          className='card__image'\r\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\r\n          alt={pokemon.name}\r\n        />\r\n      </div>\r\n      <div className='card__types'>\r\n        {pokemon.types.map(type => (\r\n          <div\r\n            className='card__type'\r\n            key={type.slot}\r\n            style={{ backgroundColor: pokemonTypes[type.type.name] }}\r\n          >\r\n            {type.type.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='card__moves'>\r\n        {`Total moves: ${pokemon.moves.length}`}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(PropTypes.shape({\r\n      slot: PropTypes.number\r\n    })).isRequired,\r\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }),\r\n  selectPokemon: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired\r\n}\r\n\r\nCard.defaultProps = {\r\n  pokemon: {}\r\n}\r\n","import React from 'react'\nimport './Stats.scss'\nimport PropTypes from 'prop-types'\n\nexport const Stats = ({ pokemon, closeModal }) => (\n    <div className='stats__container' onClick={closeModal}>\n      <div className='stats__image-container'>\n        <img\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n          alt={pokemon.name} className=\"stats__image\"\n        />\n      </div>\n      <div className='stats__name'>\n        {`${pokemon.name}`}\n      </div>\n      <div className='stats__stats'>\n        {pokemon.stats.map(stat => (\n          <div className='stats__stat-container' key={stat.stat.name}>\n            <div className='stats__stat-name'>\n              {stat.stat.name}\n            </div>\n            <div className='stats__base-stat'>\n            </div>\n              <div className='stats__base-stat-value'>\n                {stat.base_stat}\n              </div>\n          </div>\n        ))}\n      </div>\n    </div>\n)\n\nStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      base_stat: PropTypes.number.isRequired,\n      stat: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    })).isRequired\n  }),\n  selectPokemon: PropTypes.func,\n  closeModal: PropTypes.func.isRequired\n}\n\nStats.defaultProps = {\n  pokemon: {},\n  selectPokemon: () => {}\n}\n","export async function getAllPokemon (url) {\r\n  return new Promise(function (resolve, reject) {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        resolve(data)\r\n      })\r\n      .catch(error => {\r\n        reject(new Error(error))\r\n      })\r\n  })\r\n}\r\n\r\nexport async function getPokemon (url) {\r\n  return new Promise(function (resolve, reject) {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        resolve(data)\r\n      })\r\n      .catch(error => {\r\n        reject(new Error(error))\r\n      })\r\n  })\r\n}\r\n","export const URL = 'https://pokeapi.co/api/v2/pokemon/?limit=10'\r\nexport const URL20 = 'https://pokeapi.co/api/v2/pokemon/?limit=20'\r\nexport const URL50 = 'https://pokeapi.co/api/v2/pokemon/?limit=50'\r\nexport const URL_ALL = 'https://pokeapi.co/api/v2/pokemon/?limit=1118'\r\n","export const modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}\n","import 'bulma'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport './App.scss'\r\nimport { Button } from './components/Button/Button'\r\nimport { Card } from './components/Card'\r\nimport { Stats } from './components/Stats/Stats'\r\nimport { getAllPokemon, getPokemon } from './helpers/api'\r\nimport { URL, URL20, URL50, URL_ALL } from './helpers/constants'\r\nimport { modalStyles } from './helpers/modalStyles'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction App () {\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextPage, setNextPage] = useState('')\r\n  const [prevPage, setPrevPage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [modalIsOpen, setIsOpen] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [pokemon, setPokemon] = useState([])\r\n\r\n  useEffect(() => {\r\n    const downloadData = async () => {\r\n      setLoading(true)\r\n      const response = await getAllPokemon(URL)\r\n      setNextPage(response.next)\r\n      setPrevPage(response.previous)\r\n      await loadPokemon(response.results)\r\n      setLoading(false)\r\n    }\r\n\r\n    downloadData()\r\n  }, [])\r\n\r\n  const loadPokemon = async (data) => {\r\n    const pokemon = await Promise.all(\r\n      data.map(async pokemon => {\r\n        return await getPokemon(pokemon.url)\r\n      }\r\n      ))\r\n\r\n    setPokemonData(pokemon)\r\n  }\r\n\r\n  function openModal () {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  function closeModal () {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const handlePokemonSelection = (pokemonId) => {\r\n    setPokemon(pokemonData.filter(pokemon => pokemon.id === pokemonId))\r\n  }\r\n\r\n  const load = async (url) => {\r\n    setLoading(true)\r\n    const response = await getAllPokemon(url)\r\n    setNextPage(response.next)\r\n    setPrevPage(response.previous)\r\n    await loadPokemon(response.results)\r\n    setLoading(false)\r\n  }\r\n\r\n  const pagination = async (page) => {\r\n    if (page === prevPage && !prevPage) {\r\n      return\r\n    }\r\n    setLoading(true)\r\n    const data = await getAllPokemon(page)\r\n    await loadPokemon(data.results)\r\n    setNextPage(data.next)\r\n    setPrevPage(data.previous)\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target\r\n    const inputText = value.toLowerCase()\r\n    setQuery(inputText)\r\n    setPokemonData(pokemonData.filter(\r\n      pokemon => pokemon.name.toLowerCase().startsWith(inputText) ||\r\n      pokemon.name.toLowerCase().includes(inputText))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"header title is-2\">Pokedex App</div>\r\n      {loading\r\n        ? (\r\n        <>\r\n          <div className='loader__container'>\r\n            <div className='loader'>\r\n            </div>\r\n          </div>\r\n        </>\r\n          )\r\n        : (\r\n        <div className='main'>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-query\"\r\n            className=\"input input is-normal\"\r\n            placeholder=\"Start filter the pokemons!\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"main__container\">\r\n            {pokemonData.map(pokemon => (\r\n              <Card\r\n                key={pokemon.id}\r\n                pokemon={pokemon}\r\n                openModal={openModal}\r\n                selectPokemon={handlePokemonSelection}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className='main__button-container'>\r\n            {prevPage && (\r\n              <Button action={() => pagination(prevPage)} className=\"button is-warning is-focused\">\r\n                &lt; Back\r\n              </Button>\r\n            )}\r\n            {nextPage && (\r\n              <Button action={() => pagination(nextPage)} className=\"button is-warning is-focused\">\r\n                Next &gt;\r\n              </Button>\r\n            )}\r\n            {pokemonData.length > 10 &&\r\n              <Button action={() => load(URL)} className=\"button is-info is-focused\">\r\n              Load 10\r\n              </Button>\r\n            }\r\n            {pokemonData.length < 10 &&\r\n              <Button action={() => load(URL_ALL)} className=\"button is-info is-focused\">\r\n              Load all?\r\n              </Button>\r\n            }\r\n            {pokemonData.length !== 20 && (\r\n              <Button action={() => load(URL20)} className=\"button is-info is-focused\">\r\n              Load 20\r\n              </Button>\r\n            )}\r\n            {pokemonData.length !== 50 && (\r\n              <Button action={() => load(URL50)} className=\"button is-info is-focused\">\r\n              Load 50\r\n              </Button>\r\n            )}\r\n          </div>\r\n            <Modal\r\n              isOpen={modalIsOpen}\r\n              onRequestClose={closeModal}\r\n              style={modalStyles}\r\n              contentLabel='Example Modal'\r\n              closeTimeoutMS={300}\r\n            >\r\n              <div>\r\n                {pokemon.map(pokemon => (\r\n                  <Stats\r\n                    pokemon={pokemon}\r\n                    key={pokemon.id}\r\n                    closeModal={closeModal}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </Modal>\r\n        </div>\r\n          )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}